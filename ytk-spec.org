
* MILESTONE: "karaoke night"
- [ ] public interface
    - [ ] users can see the queue of songs for the night
    - [ ] indicate the currently playing and next songs
    - [ ] users can add request as (name,artist,song,video link)
    - [ ] newly created songs appear at the end of the queue
- [ ] kj interface
    - [ ] create a karaoke night with a nickname
    - [ ] show everything in the public interface
    - [ ] kj can manually rearrange the queue
    - [ ] interface to remotely control the player
        - [ ] pause player
        - [ ] stop player
        - [ ] start the player
        - [ ] restart song
        - [ ] jump to time
- [ ] video player
  - [X] play videos at all
    - we can't host our own page because most karaoke content won't let the iframe player play off of any site except youtube.com.
    - so: we need to inject some javascript into our own browser on youtube.com.
      - easy: run a script manually in the console
      - chrome user script
      - install as chrome extension?
  - [ ] play from a queue
    - [ ] provide an interface for connecting to the queue
    - [ ] when song starts, mark it as playing
    - [ ] when song ends, mark it as played
    - [ ] select next song to play from the queue, or stop if empty.
    - [ ] monitor a "command" variable for changes (stop/play/etc)
    - [ ] on "play" command, continue playing or play first unplayed song
    - [ ] on "pause", pause/unpause video
    - [ ] on "jump", jump to time (restart is just a jump to 0:00)
    - [ ] on "stop", stop the playback


* MILESTONE: "power users":
  - [ ] give users the ability to manage their list of favorite songs.
  - [ ] users can submit a song to the queue
     (youtube link, artist, their name)




* misc notes

** things to do in the js console on youtube.com

#+begin_src js
   $('.ytp-fullscreen-button').click()
   ref = document.getElementById('movie_player');
   ref.addEventListener('onStateChange', e=>console.log(['state changed!', e]))
   ref.cueVideoById('')
   ref.playVideo()
#+end_src

